
/// setting up basic user info table. Need id to be primary and username to be unique //////

CREATE TABLE users (
	id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR (255) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
    );


///// setting up basic tables for photos that will get posted. need a unique photo id as well as timestamp for when it was posted to go along with reference to user who potsted it /////////

CREATE TABLE photos (
	id INT PRIMARY KEY AUTO_INCREMENT,
    image_url VARCHAR(255) NOT NULL,
    user_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(user_id) REFERENCES users(id)
);

////////////  setting up table for comments on photos. needs to be attached to specific photo id as well as user id  /////////////

CREATE TABLE comments (
	id INT PRIMARY KEY AUTO_INCREMENT,
    comment_txt VARCHAR(100),
    user_id INT NOT NULL,
    photo_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (photo_id) REFERENCES photos (id)
);

////////// setting up table for likes that will be attached to photos. needs  to be attached to specific photo and specific user for each like. additioanlly need a primary key with the user/photo id combo so that no two likes can be replicated/////////

CREATE TABLE likes (
    user_id INT NOT NULL,
    photo_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY(user_id) REFERENCES users(id),
    FOREIGN KEY(photo_id) REFERENCES photos(id),
    PRIMARY KEY(user_id, photo_id)
);


///////////// setting up the follower/followee relationship table. need separate id for the user being followed and the user following. both ids need to reference the user id. additioally need primary key to make sure that the relationship is unique and users cannot follow themselves for example //////////

CREATE TABLE follows (
    follower_id INT NOT NULL,
    followee_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY (follower_id) REFERENCES users(id),
    FOREIGN KEY (followee_id) REFERENCES users(id),
    PRIMARY KEY (follower_id, followee_id)
);

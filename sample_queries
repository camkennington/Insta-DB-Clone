------ Finding 5 oldest users -------

SELECT * FROM users
ORDER BY created_at
LIMIT 5;


----- Most popular registration date -----

SELECT 
    DAYNAME(created_at) AS Day,
    COUNT(*) AS Total
FROM users
GROUP BY Day
ORDER BY Total DESC;





------ Identify Inactive users who have not posted photos --------

SELECT 
	username,
    COUNT(image_url) AS total,
    IF (COUNT(image_url) > 0, 'Active', 'Inactive') AS 'Status'
    FROM users
    LEFT JOIN photos
    ON users.id = photos.user_id
    WHERE photos.id IS NULL;


---------- Finding photo and user with the most likes -----------

SELECT username,
       photos.id,
       photos.image_url,
       Count(*) AS total
FROM   photos
       INNER JOIN likes
               ON likes.photo_id = photos.id
       INNER JOIN users
               ON photos.user_id = users.id
GROUP  BY photos.id
ORDER  BY total DESC; 




--------- Calculating average number of photos per user ----------

SELECT
	(SELECT COUNT(*) FROM photos) /
	(SELECT COUNT(*) FROM users) AS AVG;




--------- Find the most popular/most used hashtags ------------

SELECT tags.tag_name,
       Count(*)
FROM   photo_tags
       JOIN tags
         ON tags.id = photo_tags.tag_id
GROUP  BY tags.id
ORDER  BY Count(*) DESC; 



---------- Identify bots/ every user who has liked every photo -----------

SELECT username,
       user_id,
       Count(*) AS total_likes
FROM   users
       INNER JOIN likes
               ON users.id = likes.user_id
GROUP  BY likes.user_id
HAVING total_likes = (SELECT Count(*)
                      FROM   photos); 


---------pause --------
